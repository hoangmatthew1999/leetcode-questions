# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeElements(self, head: Optional[ListNode], val: int) -> Optional[ListNode]:
        if head == None:
            return None
        if head.next == None and head.val == val:
            return None
        if head.val == val:
            head = head.next
            
        traverser = head
        traverserHead = head
        while(traverser.next != None):
            previousNode = traverser
            traverser = traverser.next
            if traverser.val == val and traverser != None:
                previousNode.next = traverser.next

        if head.val == val:
            return None
        while(traverserHead != None):
            if traverserHead.val == val:
                       
        return head
        
